@page "/item-select"
@using Cafeteria.Shared.DTOs
@using Cafeteria.Customer.Components.ViewModelInterfaces
@using System.Text.Json
@inject IItemSelectVM ItemSelectVM
@inject NavigationManager Navigation

<PageTitle>Choose Your Menu Item</PageTitle>

<div class="container">
    <div class="row">
        <div class="col-12">
            <h2>Available Items</h2>
            <p class="text-muted">Browse our delicious food options</p>
        </div>
    </div>

    <div class="row">
        @foreach (FoodItemDto foodItem in foodItems)
        {
            <div class="col-md-4 mb-4">
                <a href="@("food-item?" + JsonSerializer.Serialize(foodItem)))" class="text-decoration-none">
                    <div class="card h-100 food-item-card">
                        @if (!string.IsNullOrEmpty(foodItem.ImageUrl))
                        {
                            <img src="@foodItem.ImageUrl" class="card-img-top" alt="@foodItem.ItemDescription" style="height: 200px; object-fit: cover;" />
                        }
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title text-dark">@foodItem.ItemDescription</h5>
                            <div class="mt-auto">
                                <h4 class="text-success">$@foodItem.ItemPrice.ToString("F2")</h4>
                            </div>
                        </div>
                    </div>
                </a>
            </div>
        }
    </div>

    @if (!foodItems.Any())
    {
        <div class="row">
            <div class="col-12 text-center">
                <div class="alert alert-info">
                    <h4>No items available to show</h4>
                    <p>Check back later for our delicious offerings!</p>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private List<FoodItemDto> foodItems = new();

    protected override void OnInitialized()
    {
        foodItems = ItemSelectVM.GetFoodItems();
    }

    private string GetFoodItemUrl(string foodItemId)
    {
        return $"/food-item?item-id={Uri.EscapeDataString(foodItemId)}"; // TODO: this line has a magic string in it for the route parameter of the food-item page that we should perhaps make into a variable somewhere...maybe in an enum?
    }
}

<style>
    .food-item-card {
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        cursor: pointer;
    }

    .food-item-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }

    a:hover .card-title {
        color: #007bff !important;
    }
</style>
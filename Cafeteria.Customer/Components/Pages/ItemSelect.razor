@page "/item-select"
@using Cafeteria.Shared

<PageTitle>Select Items</PageTitle>

<div class="container">
    <div class="row">
        <div class="col-12">
            <h2>Available Items</h2>
            <p class="text-muted">Choose from our delicious menu items</p>
        </div>
    </div>

    <div class="row">
        @foreach (var item in menuItems)
        {
            <div class="col-md-4 mb-4">
                <div class="card h-100">
                    @if (!string.IsNullOrEmpty(item.ImageUrl))
                    {
                        <img src="@item.ImageUrl" class="card-img-top" alt="@item.Name" style="height: 200px; object-fit: cover;" />
                    }
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@item.Name</h5>
                        @if (!string.IsNullOrEmpty(item.Description))
                        {
                            <p class="card-text text-muted">@item.Description</p>
                        }
                        <div class="mt-auto">
                            <h4 class="text-success">$@item.Price.ToString("F2")</h4>
                            <button type="button" class="btn btn-primary w-100 mt-2">
                                Add to Order
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    @if (!menuItems.Any())
    {
        <div class="row">
            <div class="col-12 text-center">
                <div class="alert alert-info">
                    <h4>No items available</h4>
                    <p>Check back later for our delicious offerings!</p>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private List<FoodItem> menuItems = new();

    protected override void OnInitialized()
    {
        var builder = new FoodItemBuilderService();

        menuItems = new List<FoodItem>
        {
            builder.Reset()
                .SetName("Burger")
                .SetDescription("Classic beef burger with lettuce, tomato, and onion")
                .SetImageUrl("https://via.placeholder.com/300x200?text=Burger")
                .SetPrice(8.99m)
                .Build(),
            
            builder.Reset()
                .SetName("Cheeseburger")
                .SetDescription("Juicy beef patty topped with melted cheese")
                .SetImageUrl("https://via.placeholder.com/300x200?text=Cheeseburger")
                .SetPrice(9.99m)
                .Build(),
            
            builder.Reset()
                .SetName("French Fries")
                .SetDescription("Crispy golden french fries with sea salt")
                .SetImageUrl("https://via.placeholder.com/300x200?text=French+Fries")
                .SetPrice(4.49m)
                .Build(),
            
            builder.Reset()
                .SetName("Waffle Fries")
                .SetDescription("Crispy waffle-cut fries with perfect seasoning")
                .SetImageUrl("https://via.placeholder.com/300x200?text=Waffle+Fries")
                .SetPrice(4.99m)
                .Build(),
            
            builder.Reset()
                .SetName("Grilled Cheese")
                .SetDescription("Golden grilled cheese sandwich with melted cheddar")
                .SetImageUrl("https://via.placeholder.com/300x200?text=Grilled+Cheese")
                .SetPrice(6.49m)
                .Build()
        };
    }
}
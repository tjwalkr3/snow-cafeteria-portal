@page "/place-order"
@using Cafeteria.Customer.Components.ViewModelInterface
@using Cafeteria.Shared.DTOs
@using Cafeteria.Customer.Components.Pages
@using Cafeteria.Customer.Components.ViewModelInterfaces
@using Cafeteria.Customer.Components.Data
@inject IPlaceOrderVM PlaceOrderVM

<h2>Review Your Order</h2>
<ul style="list-style-type:disc;" class="ps-3">
    @foreach (var foodItem in foodItems)
    {
        <li>
            @foodItem.ItemDescription
            @if (GetIngredientsForFoodItem(foodItem.Id).Any())
            {
                <ul style="list-style-type:circle;" class="ps-2 mt-1">
                    @foreach (var ingredient in GetIngredientsForFoodItem(foodItem.Id))
                    {
                        <li>@ingredient.IngredientName</li>
                    }
                </ul>
            }
        </li>
    }
</ul>
<button>Place Order</button>
@code {
    private List<FoodItemDto> foodItems = new();

    protected override void OnInitialized()
    {
        foodItems = PlaceOrderVM.GetOrderItems();
    }

    private List<IngredientDto> GetIngredientsForFoodItem(int foodItemId)
    {
        var ingredientMappings = DummyData.GetFoodBuilderItemIngredientList
            .Where(mapping => mapping.FoodItemId == foodItemId)
            .Select(mapping => mapping.IngredientId)
            .ToList();

        return DummyData.GetIngredientList
            .Where(ingredient => ingredientMappings.Contains(ingredient.Id))
            .ToList();
    }
}
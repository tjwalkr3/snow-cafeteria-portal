@page "/"
@page "/food-item"
@using Cafeteria.Shared

<PageTitle>Food Items</PageTitle>

<div class="container">
    <div class="row">
        <div class="col-12">
            <h2>Available Food Items</h2>
            <p class="text-muted">Browse our delicious food items</p>
        </div>
    </div>

    <div class="row">
        @foreach (var foodItem in foodItems)
        {
            <div class="col-md-4 mb-4">
                <div class="card h-100">
                    @if (!string.IsNullOrEmpty(foodItem.ImageUrl))
                    {
                        <img src="@foodItem.ImageUrl" class="card-img-top" alt="@foodItem.Name" style="height: 200px; object-fit: cover;" />
                    }
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@foodItem.Name</h5>
                        @if (!string.IsNullOrEmpty(foodItem.Description))
                        {
                            <p class="card-text text-muted">@foodItem.Description</p>
                        }
                        <div class="mt-auto">
                            <h4 class="text-success">$@foodItem.Price.ToString("F2")</h4>
                            @if (foodItem.Ingredients?.Any() == true)
                            {
                                <small class="text-muted">
                                    Ingredients: @string.Join(", ", foodItem.Ingredients.Values.Select(i => i.Name))
                                </small>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    @if (!foodItems.Any())
    {
        <div class="row">
            <div class="col-12 text-center">
                <div class="alert alert-info">
                    <h4>No food items available</h4>
                    <p>Check back later for our delicious offerings!</p>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private List<FoodItem> foodItems = new();

    protected override void OnInitialized()
    {
        var builder = new FoodItemBuilderService();

        foodItems = new List<FoodItem>
        {
            builder.Reset().SetName("Classic Pizza").SetDescription("Traditional pizza with tomato sauce and mozzarella").SetImageUrl("https://via.placeholder.com/300x200?text=Pizza").SetPrice(12.99m).Build(),
            builder.Reset().SetName("Caesar Salad").SetDescription("Fresh romaine lettuce with caesar dressing and croutons").SetImageUrl("https://via.placeholder.com/300x200?text=Salad").SetPrice(8.50m).Build(),
            builder.Reset().SetName("Cheeseburger").SetDescription("Juicy beef patty with cheese, lettuce, tomato").SetImageUrl("https://via.placeholder.com/300x200?text=Burger").SetPrice(10.75m).Build(),
            builder.Reset().SetName("Chicken Wings").SetDescription("Crispy chicken wings with your choice of sauce").SetImageUrl("https://via.placeholder.com/300x200?text=Wings").SetPrice(9.25m).Build(),
            builder.Reset().SetName("Fish Tacos").SetDescription("Fresh fish with cabbage slaw in soft tortillas").SetImageUrl("https://via.placeholder.com/300x200?text=Tacos").SetPrice(11.50m).Build(),
            builder.Reset().SetName("Chocolate Cake").SetDescription("Rich chocolate cake with chocolate frosting").SetImageUrl("https://via.placeholder.com/300x200?text=Cake").SetPrice(5.99m).Build()
        };
    }
}